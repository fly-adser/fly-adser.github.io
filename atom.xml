<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fly Adser</title>
  
  <subtitle>一个广告策略算法工程师的学习笔记</subtitle>
  <link href="http://fly-adser.top/atom.xml" rel="self"/>
  
  <link href="http://fly-adser.top/"/>
  <updated>2022-02-18T15:20:18.109Z</updated>
  <id>http://fly-adser.top/</id>
  
  <author>
    <name>Fly Adser</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>49.字母异位词分组</title>
    <link href="http://fly-adser.top/2022/02/18/leetcode49/"/>
    <id>http://fly-adser.top/2022/02/18/leetcode49/</id>
    <published>2022-02-18T15:17:40.000Z</published>
    <updated>2022-02-18T15:20:18.109Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给你一个字符串数组，请你将 字母异位词 组合在一起。可以按任意顺序返回结果列表。<a href="https://leetcode-cn.com/problems/group-anagrams/">题目链接</a><br><span id="more"></span></p><h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">groupAnagrams</span>(<span class="params">self, strs</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type strs: List[str]</span></span><br><span class="line"><span class="string">        :rtype: List[List[str]]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        mp = collections.defaultdict(<span class="built_in">list</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> st <span class="keyword">in</span> strs:</span><br><span class="line">            key = <span class="string">&quot;&quot;</span>.join(<span class="built_in">sorted</span>(st))</span><br><span class="line">            mp[key].append(st) </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">list</span>(mp.values())</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;给你一个字符串数组，请你将 字母异位词 组合在一起。可以按任意顺序返回结果列表。&lt;a href=&quot;https://leetcode-cn.com/problems/group-anagrams/&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="字符串" scheme="http://fly-adser.top/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>48.旋转图像</title>
    <link href="http://fly-adser.top/2022/02/18/leetcode48-1/"/>
    <id>http://fly-adser.top/2022/02/18/leetcode48-1/</id>
    <published>2022-02-18T15:14:45.000Z</published>
    <updated>2022-02-18T15:17:15.658Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给定一个 n × n 的二维矩阵 matrix 表示一个图像。请你将图像顺时针旋转 90 度。<a href="https://leetcode-cn.com/problems/rotate-image/">题目链接</a><br><span id="more"></span></p><h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">rotate</span>(<span class="params">self, matrix</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type matrix: List[List[int]]</span></span><br><span class="line"><span class="string">        :rtype: None Do not return anything, modify matrix in-place instead.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        n = <span class="built_in">len</span>(matrix)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, n//<span class="number">2</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, n):</span><br><span class="line">                matrix[i][j], matrix[n-i-<span class="number">1</span>][j] = matrix[n-i-<span class="number">1</span>][j], matrix[i][j]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, i):</span><br><span class="line">                matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j]</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;给定一个 n × n 的二维矩阵 matrix 表示一个图像。请你将图像顺时针旋转 90 度。&lt;a href=&quot;https://leetcode-cn.com/problems/rotate-image/&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="数学" scheme="http://fly-adser.top/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>46.全排列</title>
    <link href="http://fly-adser.top/2022/02/17/leetcode46-1/"/>
    <id>http://fly-adser.top/2022/02/17/leetcode46-1/</id>
    <published>2022-02-17T15:06:04.000Z</published>
    <updated>2022-02-17T15:11:38.182Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。<a href="https://leetcode-cn.com/problems/permutations/">题目链接</a> <span id="more"></span></p><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">permute</span>(<span class="params">self, nums</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: List[List[int]]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.res = []</span><br><span class="line">        self.recur(nums, [], <span class="number">0</span>, <span class="built_in">len</span>(nums))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.res </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">recur</span>(<span class="params">self, nums, path, k, n</span>):</span></span><br><span class="line">        <span class="keyword">if</span> k==n: </span><br><span class="line">            self.res.append(<span class="built_in">list</span>(path))</span><br><span class="line">            <span class="keyword">return</span> </span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, n):</span><br><span class="line">            <span class="keyword">if</span> nums[i] <span class="keyword">in</span> path: <span class="keyword">continue</span> </span><br><span class="line">            path.append(nums[i])</span><br><span class="line">            self.recur(nums, path, k+<span class="number">1</span>, n)</span><br><span class="line">            path.pop()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。&lt;a href=&quot;https://leetcode-cn.com/problems/permutations/&quot;&gt;题目链接&lt;/a&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="搜索与回溯算法" scheme="http://fly-adser.top/tags/%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>42.接雨水</title>
    <link href="http://fly-adser.top/2022/02/17/leetcode42/"/>
    <id>http://fly-adser.top/2022/02/17/leetcode42/</id>
    <published>2022-02-17T15:03:41.000Z</published>
    <updated>2022-02-17T15:08:05.539Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。<a href="https://leetcode-cn.com/problems/trapping-rain-water/">题目链接</a></p><span id="more"></span><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trap</span>(<span class="params">self, height</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type height: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(height)&lt;=<span class="number">2</span>: <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        hLen = <span class="built_in">len</span>(height) </span><br><span class="line">        maxLeft, maxRight = [<span class="number">0</span>]*hLen, [<span class="number">0</span>]*hLen </span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, hLen):</span><br><span class="line">            maxLeft[i] = <span class="built_in">max</span>(maxLeft[i-<span class="number">1</span>], height[i-<span class="number">1</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(hLen-<span class="number">2</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">            maxRight[i] = <span class="built_in">max</span>(maxRight[i+<span class="number">1</span>], height[i+<span class="number">1</span>]) </span><br><span class="line">        </span><br><span class="line">        sumWater = <span class="number">0</span> </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, hLen-<span class="number">1</span>):</span><br><span class="line">            hgt = <span class="built_in">min</span>(maxLeft[i], maxRight[i])</span><br><span class="line">            sumWater += <span class="built_in">max</span>(<span class="number">0</span>, hgt-height[i])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> sumWater</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。&lt;a href=&quot;https://leetcode-cn.com/problems/trapping-rain-water/&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="动态规划" scheme="http://fly-adser.top/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>39.组合总和</title>
    <link href="http://fly-adser.top/2022/02/17/leetcode39/"/>
    <id>http://fly-adser.top/2022/02/17/leetcode39/</id>
    <published>2022-02-17T15:00:44.000Z</published>
    <updated>2022-02-17T15:08:26.466Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>给你一个 无重复元素 的整数数组 candidates 和一个目标整数 target ，找出 candidates 中可以使数字和为目标数 target 的 所有 不同组合 ，并以列表形式返回。你可以按 任意顺序 返回这些组合。<a href="https://leetcode-cn.com/problems/combination-sum/">题目链接</a> <span id="more"></span></p><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">combinationSum</span>(<span class="params">self, candidates, target</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type candidates: List[int]</span></span><br><span class="line"><span class="string">        :type target: int</span></span><br><span class="line"><span class="string">        :rtype: List[List[int]]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.res = []</span><br><span class="line">        path     = []</span><br><span class="line">        self.recur(candidates, path, target, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.res</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">recur</span>(<span class="params">self, candidates, path, target, tmpSum, index</span>):</span></span><br><span class="line">        <span class="keyword">if</span> tmpSum==target:</span><br><span class="line">            self.res.append(<span class="built_in">list</span>(path))</span><br><span class="line">            <span class="keyword">return</span> </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> tmpSum&gt;target: <span class="keyword">return</span> </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(index, <span class="built_in">len</span>(candidates)):</span><br><span class="line">            tmpSum += candidates[i]</span><br><span class="line">            path.append(candidates[i])</span><br><span class="line">            self.recur(candidates, path, target, tmpSum, i)</span><br><span class="line">            path.pop() </span><br><span class="line">            tmpSum -= candidates[i]</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;给你一个 无重复元素 的整数数组 candidates 和一个目标整数 target ，找出 candidates 中可以使数字和为目标数 target 的 所有 不同组合 ，并以列表形式返回。你可以按 任意顺序 返回这些组合。&lt;a href=&quot;https://leetcode-cn.com/problems/combination-sum/&quot;&gt;题目链接&lt;/a&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="搜索与回溯算法" scheme="http://fly-adser.top/tags/%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>34.在排序数组中查找元素的第一个和最后一个位置</title>
    <link href="http://fly-adser.top/2022/02/14/leetcode34/"/>
    <id>http://fly-adser.top/2022/02/14/leetcode34/</id>
    <published>2022-02-14T15:04:05.000Z</published>
    <updated>2022-02-14T15:06:01.999Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。<a href="https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/">题目链接</a><br><span id="more"></span></p><h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">searchRange</span>(<span class="params">self, nums, target</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :type target: int</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(nums)&lt;=<span class="number">0</span>: <span class="keyword">return</span> [-<span class="number">1</span>, -<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(nums)&lt;=<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> nums[<span class="number">0</span>]==target: </span><br><span class="line">                <span class="keyword">return</span> [<span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> [-<span class="number">1</span>, -<span class="number">1</span>]</span><br><span class="line">        </span><br><span class="line">        left, index, right = <span class="number">0</span>, -<span class="number">1</span>, <span class="built_in">len</span>(nums)-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> left&lt;=right:</span><br><span class="line">            mid = left + (right - left) // <span class="number">2</span> </span><br><span class="line">            <span class="keyword">if</span> nums[mid]==target:</span><br><span class="line">                index = mid</span><br><span class="line">                <span class="keyword">break</span> </span><br><span class="line">            <span class="keyword">elif</span> nums[mid]&lt;target:</span><br><span class="line">                left  = mid + <span class="number">1</span> </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                right = mid - <span class="number">1</span> </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> index&lt;<span class="number">0</span>: <span class="keyword">return</span> [-<span class="number">1</span>, -<span class="number">1</span>]</span><br><span class="line">        left, right = <span class="number">0</span>, index </span><br><span class="line">        <span class="keyword">while</span> left&lt;=right:</span><br><span class="line">            mid = left + (right - left) // <span class="number">2</span> </span><br><span class="line">            <span class="keyword">if</span> nums[mid]==target <span class="keyword">and</span> (mid==<span class="number">0</span> <span class="keyword">or</span> nums[mid-<span class="number">1</span>]&lt;target):</span><br><span class="line">                resLeft = mid </span><br><span class="line">                <span class="keyword">break</span> </span><br><span class="line">            <span class="keyword">elif</span> nums[mid]&gt;=target:</span><br><span class="line">                right = mid - <span class="number">1</span> </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                left  = mid + <span class="number">1</span> </span><br><span class="line">        </span><br><span class="line">        left, right = index, <span class="built_in">len</span>(nums)-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> left&lt;=right:</span><br><span class="line">            mid = left + (right - left) // <span class="number">2</span> </span><br><span class="line">            <span class="keyword">if</span> nums[mid]==target <span class="keyword">and</span> (mid==<span class="built_in">len</span>(nums)-<span class="number">1</span> <span class="keyword">or</span> nums[mid+<span class="number">1</span>]&gt;nums[mid]):</span><br><span class="line">                resRight = mid </span><br><span class="line">                <span class="keyword">break</span> </span><br><span class="line">            <span class="keyword">elif</span> nums[mid]&lt;=target:</span><br><span class="line">                left  = mid + <span class="number">1</span> </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                right = mid - <span class="number">1</span> </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> [resLeft, resRight]</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。&lt;a href=&quot;https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="查找算法" scheme="http://fly-adser.top/tags/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>33.搜索旋转排序数组</title>
    <link href="http://fly-adser.top/2022/02/14/leetcode33-1/"/>
    <id>http://fly-adser.top/2022/02/14/leetcode33-1/</id>
    <published>2022-02-14T15:01:06.000Z</published>
    <updated>2022-02-14T15:03:51.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>整数数组 nums 按升序排列，数组中的值 互不相同 。</p><p>在传递给函数之前，nums 在预先未知的某个下标 k（0 &lt;= k &lt; nums.length）上进行了 旋转，使数组变为 [nums[k], nums[k+1], …, nums[n-1], nums[0], nums[1], …, nums[k-1]]（下标 从 0 开始 计数）。例如， [0,1,2,4,5,6,7] 在下标 3 处经旋转后可能变为 [4,5,6,7,0,1,2] 。<br><span id="more"></span><br>给你 旋转后 的数组 nums 和一个整数 target ，如果 nums 中存在这个目标值 target ，则返回它的下标，否则返回 -1 。<a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/">题目链接</a></p><h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search</span>(<span class="params">self, nums, target</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :type target: int</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(nums)==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> nums[<span class="number">0</span>]==target: </span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span> </span><br><span class="line">        </span><br><span class="line">        left, right = <span class="number">0</span>, <span class="built_in">len</span>(nums)-<span class="number">1</span> </span><br><span class="line">        <span class="keyword">while</span> left&lt;=right:</span><br><span class="line">            mid = left + (right - left) // <span class="number">2</span> </span><br><span class="line">            <span class="keyword">if</span> nums[mid]==target: </span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            <span class="keyword">if</span> left==right:</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span> </span><br><span class="line">            <span class="keyword">if</span> nums[left]==target: <span class="keyword">return</span> left </span><br><span class="line">            <span class="keyword">if</span> nums[right]==target: <span class="keyword">return</span> right</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> nums[left]&lt;=nums[mid-<span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">if</span> target&gt;=nums[left] <span class="keyword">and</span> target&lt;=nums[mid-<span class="number">1</span>]:</span><br><span class="line">                    right = mid - <span class="number">1</span> </span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    left  = mid + <span class="number">1</span> </span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> nums[mid+<span class="number">1</span>]&lt;=nums[right]:</span><br><span class="line">                <span class="keyword">if</span> target&gt;=nums[mid+<span class="number">1</span>] <span class="keyword">and</span> target&lt;=nums[right]:</span><br><span class="line">                    left  = mid + <span class="number">1</span> </span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    right = mid - <span class="number">1</span> </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;整数数组 nums 按升序排列，数组中的值 互不相同 。&lt;/p&gt;
&lt;p&gt;在传递给函数之前，nums 在预先未知的某个下标 k（0 &amp;lt;= k &amp;lt; nums.length）上进行了 旋转，使数组变为 [nums[k], nums[k+1], …, nums[n-1], nums[0], nums[1], …, nums[k-1]]（下标 从 0 开始 计数）。例如， [0,1,2,4,5,6,7] 在下标 3 处经旋转后可能变为 [4,5,6,7,0,1,2] 。&lt;br&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="查找算法" scheme="http://fly-adser.top/tags/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>32.最长有效括号</title>
    <link href="http://fly-adser.top/2022/02/13/leetcode32/"/>
    <id>http://fly-adser.top/2022/02/13/leetcode32/</id>
    <published>2022-02-13T12:45:02.000Z</published>
    <updated>2022-02-13T12:46:59.829Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号子串的长度。<a href="https://leetcode-cn.com/problems/longest-valid-parentheses/">题目链接</a><br /><span id="more"></span></p><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestValidParentheses</span>(<span class="params">self, s</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        stack = [-<span class="number">1</span>]</span><br><span class="line">        left, res = <span class="number">0</span>, <span class="number">0</span>  </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(s)):</span><br><span class="line">            <span class="keyword">if</span> s[i]==<span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">                stack.append(i)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                index = stack[-<span class="number">1</span>]</span><br><span class="line">                <span class="keyword">if</span> index&lt;<span class="number">0</span>: </span><br><span class="line">                    stack.append(i)</span><br><span class="line">                    <span class="keyword">continue</span> </span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> s[index]==<span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">                    stack.pop()</span><br><span class="line">                    res = <span class="built_in">max</span>(i-stack[-<span class="number">1</span>], res)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    stack.append(i)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;给你一个只包含 &#39;(&#39; 和 &#39;)&#39; 的字符串，找出最长有效（格式正确且连续）括号子串的长度。&lt;a href=&quot;https://leetcode-cn.com/problems/longest-valid-parentheses/&quot;&gt;题目链接&lt;/a&gt;&lt;br /&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="字符串" scheme="http://fly-adser.top/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>31.下一个排列</title>
    <link href="http://fly-adser.top/2022/02/13/leetcode31/"/>
    <id>http://fly-adser.top/2022/02/13/leetcode31/</id>
    <published>2022-02-13T12:42:13.000Z</published>
    <updated>2022-02-13T12:44:40.298Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。<a href="https://leetcode-cn.com/problems/next-permutation/">题目链接</a> <span id="more"></span></p><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">nextPermutation</span>(<span class="params">self, nums</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: None Do not return anything, modify nums in-place instead.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(nums)&lt;=<span class="number">1</span>: <span class="keyword">return</span> nums </span><br><span class="line"></span><br><span class="line">        left, right = <span class="number">0</span>, <span class="built_in">len</span>(nums)-<span class="number">1</span> </span><br><span class="line">        <span class="keyword">while</span> right&gt;left:</span><br><span class="line">            <span class="keyword">if</span> nums[right]&gt;nums[right-<span class="number">1</span>]: <span class="keyword">break</span> </span><br><span class="line">            right -= <span class="number">1</span> </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> right==left:</span><br><span class="line">            nums.sort()</span><br><span class="line">            <span class="keyword">return</span> nums </span><br><span class="line">        </span><br><span class="line">        left  = right - <span class="number">1</span> </span><br><span class="line">        right = <span class="built_in">len</span>(nums)-<span class="number">1</span> </span><br><span class="line">        <span class="keyword">while</span> right&gt;left:</span><br><span class="line">            <span class="keyword">if</span> nums[right]&gt;nums[left]: <span class="keyword">break</span> </span><br><span class="line">            right -= <span class="number">1</span> </span><br><span class="line">        </span><br><span class="line">        nums[left], nums[right] = nums[right], nums[left]</span><br><span class="line">        self.reverse(nums, left+<span class="number">1</span>, <span class="built_in">len</span>(nums)-<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverse</span>(<span class="params">self, nums, left, right</span>):</span></span><br><span class="line">        <span class="keyword">while</span> left&lt;right:</span><br><span class="line">            nums[left], nums[right] = nums[right], nums[left]</span><br><span class="line">            left  += <span class="number">1</span></span><br><span class="line">            right -= <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。&lt;a href=&quot;https://leetcode-cn.com/problems/next-permutation/&quot;&gt;题目链接&lt;/a&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="双指针" scheme="http://fly-adser.top/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>23.合并K个升序链表</title>
    <link href="http://fly-adser.top/2022/02/12/leetcode23/"/>
    <id>http://fly-adser.top/2022/02/12/leetcode23/</id>
    <published>2022-02-12T03:11:13.000Z</published>
    <updated>2022-02-12T03:15:37.710Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>给你一个链表数组，每个链表都已经按升序排列。<a href="https://leetcode-cn.com/problems/merge-k-sorted-lists/">题目链接</a></p><span id="more"></span><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mergeKLists</span>(<span class="params">self, lists</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type lists: List[ListNode]</span></span><br><span class="line"><span class="string">        :rtype: ListNode</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(lists)&lt;=<span class="number">0</span>: <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.mergeSort(lists, <span class="number">0</span>, <span class="built_in">len</span>(lists)-<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mergeSort</span>(<span class="params">self, lists, left, right</span>):</span></span><br><span class="line">        <span class="keyword">if</span> left&gt;=right: <span class="keyword">return</span> lists[left] </span><br><span class="line"></span><br><span class="line">        mid   = left + (right - left) // <span class="number">2</span> </span><br><span class="line">        listA = self.mergeSort(lists, left, mid)</span><br><span class="line">        listB = self.mergeSort(lists, mid+<span class="number">1</span>, right)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.mergeTwoList(listA, listB)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mergeTwoList</span>(<span class="params">self, list1, list2</span>):</span></span><br><span class="line">        <span class="keyword">if</span> list1 <span class="keyword">is</span> <span class="literal">None</span>: <span class="keyword">return</span> list2 </span><br><span class="line">        <span class="keyword">if</span> list2 <span class="keyword">is</span> <span class="literal">None</span>: <span class="keyword">return</span> list1</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> list1.val&lt;=list2.val:</span><br><span class="line">            head  = list1 </span><br><span class="line">            list1 = list1.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            head  = list2</span><br><span class="line">            list2 = list2.<span class="built_in">next</span> </span><br><span class="line">        node = head</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> list1 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> list2 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">if</span> list1.val&lt;=list2.val:</span><br><span class="line">                node.<span class="built_in">next</span> = list1 </span><br><span class="line">                node      = node.<span class="built_in">next</span> </span><br><span class="line">                list1     = list1.<span class="built_in">next</span> </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                node.<span class="built_in">next</span> = list2 </span><br><span class="line">                node      = node.<span class="built_in">next</span> </span><br><span class="line">                list2     = list2.<span class="built_in">next</span>  </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> list1 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            node.<span class="built_in">next</span> = list1 </span><br><span class="line">        <span class="keyword">if</span> list2 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            node.<span class="built_in">next</span> = list2 </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> head</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;给你一个链表数组，每个链表都已经按升序排列。&lt;a href=&quot;https://leetcode-cn.com/problems/merge-k-sorted-lists/&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="分治算法" scheme="http://fly-adser.top/tags/%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>22.括号生成</title>
    <link href="http://fly-adser.top/2022/02/12/leetcode22-1/"/>
    <id>http://fly-adser.top/2022/02/12/leetcode22-1/</id>
    <published>2022-02-12T03:07:20.000Z</published>
    <updated>2022-02-12T03:10:39.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。<a href="https://leetcode-cn.com/problems/generate-parentheses/">题目链接</a><br /><span id="more"></span></p><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generateParenthesis</span>(<span class="params">self, n</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type n: int</span></span><br><span class="line"><span class="string">        :rtype: List[str]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span> </span><br><span class="line">        self.res = []</span><br><span class="line">        self.recur([], <span class="number">0</span>, n)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.res</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">recur</span>(<span class="params">self, subRes, k, n</span>):</span></span><br><span class="line">        <span class="keyword">if</span> k==<span class="number">2</span>*n:</span><br><span class="line">            stack = []</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> subRes:</span><br><span class="line">                <span class="keyword">if</span> c==<span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">                    stack.append(c)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">len</span>(stack)&lt;=<span class="number">0</span> <span class="keyword">or</span> stack[-<span class="number">1</span>]!=<span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">                        <span class="keyword">return</span> </span><br><span class="line">                    stack.pop() </span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(stack)&lt;=<span class="number">0</span>:</span><br><span class="line">                self.res.append(<span class="string">&#x27;&#x27;</span>.join(subRes))</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span>   </span><br><span class="line">        </span><br><span class="line">        s = <span class="string">&#x27;()&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">            subRes.append(c)</span><br><span class="line">            self.recur(subRes, k+<span class="number">1</span>, n)</span><br><span class="line">            subRes.pop()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。&lt;a href=&quot;https://leetcode-cn.com/problems/generate-parentheses/&quot;&gt;题目链接&lt;/a&gt;&lt;br /&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="搜索与回溯算法" scheme="http://fly-adser.top/tags/%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>21.合并两个有序链表</title>
    <link href="http://fly-adser.top/2022/02/11/leetcode21-2/"/>
    <id>http://fly-adser.top/2022/02/11/leetcode21-2/</id>
    <published>2022-02-10T23:47:55.000Z</published>
    <updated>2022-02-10T23:50:01.046Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 <a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/">题目链接</a> <span id="more"></span></p><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mergeTwoLists</span>(<span class="params">self, list1, list2</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type list1: Optional[ListNode]</span></span><br><span class="line"><span class="string">        :type list2: Optional[ListNode]</span></span><br><span class="line"><span class="string">        :rtype: Optional[ListNode]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> list1 <span class="keyword">is</span> <span class="literal">None</span>: <span class="keyword">return</span> list2 </span><br><span class="line">        <span class="keyword">if</span> list2 <span class="keyword">is</span> <span class="literal">None</span>: <span class="keyword">return</span> list1</span><br><span class="line">        <span class="keyword">if</span> list1.val&lt;=list2.val:</span><br><span class="line">            head  = list1</span><br><span class="line">            list1 = list1.<span class="built_in">next</span>  </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            head  = list2</span><br><span class="line">            list2 = list2.<span class="built_in">next</span> </span><br><span class="line">        </span><br><span class="line">        node = head </span><br><span class="line">        <span class="keyword">while</span> list1 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> list2 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">if</span> list1.val&lt;=list2.val:</span><br><span class="line">                node.<span class="built_in">next</span> = list1</span><br><span class="line">                list1     = list1.<span class="built_in">next</span></span><br><span class="line">                node      = node.<span class="built_in">next</span> </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                node.<span class="built_in">next</span> = list2</span><br><span class="line">                list2     = list2.<span class="built_in">next</span></span><br><span class="line">                node      = node.<span class="built_in">next</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> list1 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            node.<span class="built_in">next</span> = list1 </span><br><span class="line">        <span class="keyword">if</span> list2 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            node.<span class="built_in">next</span> = list2 </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> head</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 &lt;a href=&quot;https://leetcode-cn.com/problems/merge-two-sorted-lists/&quot;&gt;题目链接&lt;/a&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="链表" scheme="http://fly-adser.top/tags/%E9%93%BE%E8%A1%A8/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>20.有效的括号</title>
    <link href="http://fly-adser.top/2022/02/11/leetcode20/"/>
    <id>http://fly-adser.top/2022/02/11/leetcode20/</id>
    <published>2022-02-10T23:42:16.000Z</published>
    <updated>2022-02-10T23:47:32.719Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。<a href="https://leetcode-cn.com/problems/valid-parentheses/">题目链接</a> <span id="more"></span></p><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isValid</span>(<span class="params">self, s</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: bool</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        stack = []</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> c <span class="keyword">in</span> <span class="string">&#x27;&#123;[(&#x27;</span>:</span><br><span class="line">                stack.append(c)</span><br><span class="line">            <span class="keyword">elif</span> c==<span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(stack)&lt;=<span class="number">0</span> <span class="keyword">or</span> stack[-<span class="number">1</span>]!=<span class="string">&#x27;&#123;&#x27;</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span> </span><br><span class="line">                stack.pop()</span><br><span class="line">            <span class="keyword">elif</span> c==<span class="string">&#x27;]&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(stack)&lt;=<span class="number">0</span> <span class="keyword">or</span> stack[-<span class="number">1</span>]!=<span class="string">&#x27;[&#x27;</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span> </span><br><span class="line">                stack.pop() </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(stack)&lt;=<span class="number">0</span> <span class="keyword">or</span> stack[-<span class="number">1</span>]!=<span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span> </span><br><span class="line">                stack.pop()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(stack)&lt;=<span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;给定一个只包括 &#39;(&#39;，&#39;)&#39;，&#39;{&#39;，&#39;}&#39;，&#39;[&#39;，&#39;]&#39; 的字符串 s ，判断字符串是否有效。&lt;a href=&quot;https://leetcode-cn.com/problems/valid-parentheses/&quot;&gt;题目链接&lt;/a&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="字符串" scheme="http://fly-adser.top/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>19.删除链表的倒数第N个节点</title>
    <link href="http://fly-adser.top/2022/02/10/leetcode19/"/>
    <id>http://fly-adser.top/2022/02/10/leetcode19/</id>
    <published>2022-02-10T14:59:54.000Z</published>
    <updated>2022-02-10T15:01:49.309Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。<a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/">题目链接</a><br /><span id="more"></span></p><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeNthFromEnd</span>(<span class="params">self, head, n</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type head: ListNode</span></span><br><span class="line"><span class="string">        :type n: int</span></span><br><span class="line"><span class="string">        :rtype: ListNode</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        left, right = head, head </span><br><span class="line">        i = <span class="number">0</span> </span><br><span class="line">        <span class="keyword">while</span> i&lt;n <span class="keyword">and</span> right <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            right = right.<span class="built_in">next</span> </span><br><span class="line">            i    += <span class="number">1</span> </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> right <span class="keyword">is</span> <span class="literal">None</span>: <span class="keyword">return</span> head.<span class="built_in">next</span> </span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> right.<span class="built_in">next</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            left  = left.<span class="built_in">next</span></span><br><span class="line">            right = right.<span class="built_in">next</span></span><br><span class="line">        </span><br><span class="line">        left.<span class="built_in">next</span> = left.<span class="built_in">next</span>.<span class="built_in">next</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> head</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。&lt;a href=&quot;https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/&quot;&gt;题目链接&lt;/a&gt;&lt;br /&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="双指针" scheme="http://fly-adser.top/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>17.电话号码的字母组合</title>
    <link href="http://fly-adser.top/2022/02/10/leetcode17/"/>
    <id>http://fly-adser.top/2022/02/10/leetcode17/</id>
    <published>2022-02-10T14:57:13.000Z</published>
    <updated>2022-02-10T14:59:36.352Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。答案可以按 任意顺序 返回。<a href="https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/">题目链接</a> <span id="more"></span></p><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">letterCombinations</span>(<span class="params">self, digits</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type digits: str</span></span><br><span class="line"><span class="string">        :rtype: List[str]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.<span class="built_in">map</span> = &#123;</span><br><span class="line">            <span class="string">&#x27;2&#x27;</span>: <span class="string">&#x27;abc&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;3&#x27;</span>: <span class="string">&#x27;def&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;4&#x27;</span>: <span class="string">&#x27;ghi&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;5&#x27;</span>: <span class="string">&#x27;jkl&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;6&#x27;</span>: <span class="string">&#x27;mno&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;7&#x27;</span>: <span class="string">&#x27;pqrs&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;8&#x27;</span>: <span class="string">&#x27;tuv&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;9&#x27;</span>: <span class="string">&#x27;wxyz&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        self.n   = <span class="built_in">len</span>(digits)</span><br><span class="line">        self.res = []</span><br><span class="line">        <span class="keyword">if</span> self.n&lt;=<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> self.res </span><br><span class="line">        self.recur(digits, [], <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.res</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">recur</span>(<span class="params">self, digits, cs, k</span>):</span></span><br><span class="line">        <span class="keyword">if</span> k==self.n:</span><br><span class="line">            subRes = <span class="string">&#x27;&#x27;</span>.join(cs)</span><br><span class="line">            self.res.append(subRes)</span><br><span class="line">            <span class="keyword">return</span> </span><br><span class="line">        </span><br><span class="line">        s = self.<span class="built_in">map</span>[digits[k]]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(s)):</span><br><span class="line">            cs.append(s[i])</span><br><span class="line">            self.recur(digits, cs, k+<span class="number">1</span>)</span><br><span class="line">            cs.pop()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。答案可以按 任意顺序 返回。&lt;a href=&quot;https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/&quot;&gt;题目链接&lt;/a&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="搜索与回溯算法" scheme="http://fly-adser.top/tags/%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>15.三数之和</title>
    <link href="http://fly-adser.top/2022/02/09/leetcode15/"/>
    <id>http://fly-adser.top/2022/02/09/leetcode15/</id>
    <published>2022-02-09T14:59:37.000Z</published>
    <updated>2022-02-09T15:01:31.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。<a href="https://leetcode-cn.com/problems/3sum/">题目链接</a><br><span id="more"></span></p><h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">threeSum</span>(<span class="params">self, nums</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: List[List[int]]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        res = []</span><br><span class="line">        i, j, s = <span class="number">0</span>, <span class="number">0</span>, <span class="built_in">len</span>(nums) </span><br><span class="line">        nums.sort()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, s):</span><br><span class="line">            <span class="keyword">if</span> i&gt;<span class="number">0</span> <span class="keyword">and</span> nums[i]==nums[i-<span class="number">1</span>]: <span class="keyword">continue</span> </span><br><span class="line">            left, right = i+<span class="number">1</span>, s-<span class="number">1</span></span><br><span class="line">            target = -nums[i] </span><br><span class="line">            <span class="keyword">while</span> left&lt;s <span class="keyword">and</span> right&gt;<span class="number">0</span> <span class="keyword">and</span> left&lt;right:</span><br><span class="line">                <span class="keyword">if</span> nums[left]+nums[right]&lt;target:</span><br><span class="line">                    left +=<span class="number">1</span> </span><br><span class="line">                    <span class="keyword">while</span> left&lt;s <span class="keyword">and</span> left&lt;right <span class="keyword">and</span> nums[left]==nums[left-<span class="number">1</span>]:</span><br><span class="line">                        left += <span class="number">1</span> </span><br><span class="line">                <span class="keyword">elif</span> nums[left]+nums[right]&gt;target:</span><br><span class="line">                    right -= <span class="number">1</span> </span><br><span class="line">                    <span class="keyword">while</span> right&gt;=<span class="number">0</span> <span class="keyword">and</span> right&gt;left <span class="keyword">and</span> nums[right]==nums[right+<span class="number">1</span>]:</span><br><span class="line">                        right -= <span class="number">1</span> </span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.append([nums[i], nums[left], nums[right]])</span><br><span class="line">                    left += <span class="number">1</span> </span><br><span class="line">                    right -= <span class="number">1</span></span><br><span class="line">                    <span class="keyword">while</span> left&lt;s <span class="keyword">and</span> left&lt;right <span class="keyword">and</span> nums[left]==nums[left-<span class="number">1</span>]:</span><br><span class="line">                        left += <span class="number">1</span> </span><br><span class="line">                    <span class="keyword">while</span> right&gt;=<span class="number">0</span> <span class="keyword">and</span> right&gt;left <span class="keyword">and</span> nums[right]==nums[right+<span class="number">1</span>]:</span><br><span class="line">                        right -= <span class="number">1</span> </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。&lt;a href=&quot;https://leetcode-cn.com/problems/3sum/&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="双指针" scheme="http://fly-adser.top/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>11.盛最多水的容器</title>
    <link href="http://fly-adser.top/2022/02/09/leetcode11-1/"/>
    <id>http://fly-adser.top/2022/02/09/leetcode11-1/</id>
    <published>2022-02-09T14:56:54.000Z</published>
    <updated>2022-02-09T14:59:43.022Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>给你 n 个非负整数 a1，a2，…，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0) 。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。<a href="https://leetcode-cn.com/problems/container-with-most-water/">题目链接</a><br><span id="more"></span></p><h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxArea</span>(<span class="params">self, height</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type height: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        i, j, res = <span class="number">0</span>, <span class="built_in">len</span>(height)-<span class="number">1</span>, <span class="number">0</span> </span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> i&lt;j:</span><br><span class="line">            <span class="keyword">if</span> height[i]&lt;height[j]:</span><br><span class="line">                res = <span class="built_in">max</span>(res, height[i]*(j-i))</span><br><span class="line">                i += <span class="number">1</span> </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res = <span class="built_in">max</span>(res, height[j]*(j-i))</span><br><span class="line">                j -= <span class="number">1</span> </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;给你 n 个非负整数 a1，a2，…，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0) 。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。&lt;a href=&quot;https://leetcode-cn.com/problems/container-with-most-water/&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="动态规划" scheme="http://fly-adser.top/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>05.最长回文子串</title>
    <link href="http://fly-adser.top/2022/02/08/leetcode05-1/"/>
    <id>http://fly-adser.top/2022/02/08/leetcode05-1/</id>
    <published>2022-02-08T15:50:31.000Z</published>
    <updated>2022-02-08T15:52:30.425Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>给你一个字符串 s，找到 s 中最长的回文子串。<a href="https://leetcode-cn.com/problems/longest-palindromic-substring/">题目链接</a><br /><span id="more"></span></p><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span>(<span class="params">self, s</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: str</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(s)&lt;= <span class="number">1</span>: <span class="keyword">return</span> s </span><br><span class="line">        begin, maxLen = <span class="number">0</span>, <span class="number">0</span> </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(s)-<span class="number">1</span>):</span><br><span class="line">            len1 = self.countPalind(s, i, i)</span><br><span class="line">            len2 = self.countPalind(s, i, i+<span class="number">1</span>)</span><br><span class="line">            lenS = <span class="built_in">max</span>(len1, len2)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> lenS&gt;maxLen:</span><br><span class="line">                begin  = i - (lenS-<span class="number">1</span>) / <span class="number">2</span> </span><br><span class="line">                maxLen = lenS </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> s[begin: begin+maxLen]</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countPalind</span>(<span class="params">self, s, left, right</span>):</span></span><br><span class="line">        maxLen = <span class="number">0</span> </span><br><span class="line">        <span class="keyword">while</span> left&gt;=<span class="number">0</span> <span class="keyword">and</span> right &lt;<span class="built_in">len</span>(s) <span class="keyword">and</span> s[left]==s[right]:</span><br><span class="line">            maxLen = right - left + <span class="number">1</span> </span><br><span class="line">            left  -= <span class="number">1</span> </span><br><span class="line">            right += <span class="number">1</span> </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> maxLen</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;给你一个字符串 s，找到 s 中最长的回文子串。&lt;a href=&quot;https://leetcode-cn.com/problems/longest-palindromic-substring/&quot;&gt;题目链接&lt;/a&gt;&lt;br /&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="字符串" scheme="http://fly-adser.top/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>04.寻找两个正序数组的中位数</title>
    <link href="http://fly-adser.top/2022/02/07/leetcode04-1/"/>
    <id>http://fly-adser.top/2022/02/07/leetcode04-1/</id>
    <published>2022-02-07T08:22:16.000Z</published>
    <updated>2022-02-07T08:24:29.675Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>给定两个大小分别为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这两个正序数组的 中位数 。</p><p>算法的时间复杂度应该为 O(log (m+n)) 。<a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/">题目链接</a> <span id="more"></span></p><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findMedianSortedArrays</span>(<span class="params">self, nums1, nums2</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type nums1: List[int]</span></span><br><span class="line"><span class="string">        :type nums2: List[int]</span></span><br><span class="line"><span class="string">        :rtype: float</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(nums1)&gt;<span class="built_in">len</span>(nums2):</span><br><span class="line">            nums1, nums2 = nums2, nums1 </span><br><span class="line">        </span><br><span class="line">        m = <span class="built_in">len</span>(nums1)</span><br><span class="line">        n = <span class="built_in">len</span>(nums2)</span><br><span class="line">        totalLeft = (m + n + <span class="number">1</span>) // <span class="number">2</span> </span><br><span class="line"></span><br><span class="line">        left, right = <span class="number">0</span>, m </span><br><span class="line">        <span class="keyword">while</span> left&lt;right:</span><br><span class="line">            i = left + (right - left + <span class="number">1</span>) // <span class="number">2</span> </span><br><span class="line">            j = totalLeft - i </span><br><span class="line">            <span class="keyword">if</span> nums1[i-<span class="number">1</span>]&gt;nums2[j]:</span><br><span class="line">                right = i - <span class="number">1</span> </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                left = i  </span><br><span class="line">        </span><br><span class="line">        i, j = left, totalLeft - left </span><br><span class="line">        num1LeftMax  = nums1[i-<span class="number">1</span>] <span class="keyword">if</span> i-<span class="number">1</span>&gt;=<span class="number">0</span> <span class="keyword">else</span> <span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>)</span><br><span class="line">        num2LeftMax  = nums2[j-<span class="number">1</span>] <span class="keyword">if</span> j-<span class="number">1</span>&gt;=<span class="number">0</span> <span class="keyword">else</span> <span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>)</span><br><span class="line">        num1RightMin = nums1[i] <span class="keyword">if</span> i&lt;m <span class="keyword">else</span> <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">        num2RightMin = nums2[j] <span class="keyword">if</span> j&lt;n <span class="keyword">else</span> <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>) </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (m+n)%<span class="number">2</span>==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">max</span>(num1LeftMax, num2LeftMax)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> (<span class="built_in">max</span>(num1LeftMax, num2LeftMax) + <span class="built_in">min</span>(num1RightMin, num2RightMin)) / <span class="number">2.0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;给定两个大小分别为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。请你找出并返回这两个正序数组的 中位数 。&lt;/p&gt;
&lt;p&gt;算法的时间复杂度应该为 O(log (m+n)) 。&lt;a href=&quot;https://leetcode-cn.com/problems/median-of-two-sorted-arrays/&quot;&gt;题目链接&lt;/a&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="分治算法" scheme="http://fly-adser.top/tags/%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
  <entry>
    <title>03.无重复字符的最长子串</title>
    <link href="http://fly-adser.top/2022/02/07/leetcode3/"/>
    <id>http://fly-adser.top/2022/02/07/leetcode3/</id>
    <published>2022-02-07T08:18:41.000Z</published>
    <updated>2022-02-07T08:21:31.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目">题目</h1><p>给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。<a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">题目链接</a> <span id="more"></span></p><h1 id="解法">解法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lengthOfLongestSubstring</span>(<span class="params">self, s</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type s: str</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(s)&lt;=<span class="number">0</span>: <span class="keyword">return</span> <span class="number">0</span> </span><br><span class="line">        left, maxLen = <span class="number">0</span>, <span class="number">0</span> </span><br><span class="line">        dic = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i, c <span class="keyword">in</span> <span class="built_in">enumerate</span>(s):</span><br><span class="line">            <span class="keyword">if</span> c <span class="keyword">in</span> dic <span class="keyword">and</span> dic[c]&gt;=left:</span><br><span class="line">                left   = dic[c]+<span class="number">1</span></span><br><span class="line">                dic[c] = i</span><br><span class="line">                <span class="keyword">continue</span> </span><br><span class="line">            </span><br><span class="line">            dic[c] = i </span><br><span class="line">            maxLen = <span class="built_in">max</span>(maxLen, i-left+<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> maxLen</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;题目&lt;/h1&gt;
&lt;p&gt;给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。&lt;a href=&quot;https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/&quot;&gt;题目链接&lt;/a&gt;</summary>
    
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="http://fly-adser.top/tags/LeetCode/"/>
    
    <category term="字符串" scheme="http://fly-adser.top/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    <category term="Hot100" scheme="http://fly-adser.top/tags/Hot100/"/>
    
  </entry>
  
</feed>
